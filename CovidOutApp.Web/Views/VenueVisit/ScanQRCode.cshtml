@{
    ViewData["Title"] = "Scan with qrcode";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div id="reader" width="600px"></div>
            <div>
                <a href="#" id="start-btn" class="btn btn-primary" disabled>Start Camera</a>
                <a href="#" id="stop-btn" class="btn btn-primary">Stop Camera</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/qrCodeReader/html5-qrcode.min.js"></script>
    <script>
        const html5QrCode = new Html5Qrcode("reader");
        var cameraId = null;
        var startScanning = function(cameraId){
            $("#start-btn").attr('disabled', true);
            $("#stop-btn").attr('disabled', false);

             html5QrCode.start(
                cameraId,     // retreived in the previous step.
                {
                    fps: 10,    // sets the framerate to 10 frame per second
                    qrbox: 290  // sets only 250 X 250 region of viewfinder to
                                // scannable, rest shaded.
                },
                qrCodeMessage => {
                    // do something when code is read. For example:
                    console.log(`QR Code detected: ${qrCodeMessage}`);
                    
                    
                    var msgElement = document.getElementById("qr-scanned-message");
                    msgElement.innerHTML = "QR code detected!";
                    setTimeout(function(){
                        window.location.href = qrCodeMessage;
                    }, 2000);
                    
                    //alert (qrCodeMessage);
                },
                errorMessage => {
                    // parse error, ideally ignore it. For example:
                    console.log(`QR Code no longer in front of camera.`);
                })
                .catch(err => {
                // Start failed, handle it. For example,
                console.log(`Unable to start scanning, error: ${err}`);
                });
        }


        Html5Qrcode.getCameras().then(devices => {
            if (devices && devices.length) {
                cameraId = devices[0].id;
                startScanning(cameraId);
            }
        }).catch(err => {
        // handle err
        });

    var stopScanningBtn = document.getElementById("stop-btn");
    var startScanningBtn = document.getElementById("start-btn");

    stopScanningBtn.addEventListener("click", function(e){
        $("#stop-btn").attr('disabled', true);
        $("#start-btn").attr('disabled', false);        
        
        html5QrCode.stop().then(ignore => {
        // QR Code scanning is stopped.
        console.log("QR Code scanning stopped.");
        }).catch(err => {
        // Stop failed, handle it.
        console.log("Unable to stop scanning.");
        });
    });

    startScanningBtn.addEventListener("click", function(e){
        startScanning(cameraId);
    })

    </script>
}